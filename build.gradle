plugins {
    id "java"
    id "idea"
    id "application"
    id "maven-publish"
    id "io.freefair.lombok" version "6.5.0.2"
}

apply plugin: "java"
apply plugin: "application"
apply plugin: "io.freefair.lombok"

group 'com.riversidecode.extractor'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = "dev"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    annotationProcessor "com.google.dagger:dagger-compiler:2.42"
    implementation "com.google.dagger:dagger:2.42"

    // logging
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.17.2"
    implementation "org.apache.logging.log4j:log4j-core:2.17.2"
    implementation "org.apache.logging.log4j:log4j-api:2.17.2"
    implementation "org.apache.logging.log4j:log4j-layout-template-json:2.17.2"
    implementation 'commons-codec:commons-codec:1.15'

    // tools
    implementation "info.picocli:picocli:4.6.3"
    implementation "com.google.guava:guava:31.1-jre"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.3"
    implementation "com.opencsv:opencsv:5.6"

    implementation "commons-validator:commons-validator:1.7"
    // apache
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "org.apache.commons:commons-io:1.3.2"

    testAnnotationProcessor "com.google.dagger:dagger-compiler:2.42"
    testImplementation "com.google.dagger:dagger:2.42"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "junit:junit:4.13.2"
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

mainClassName = "com.riversidecode.extractor.Extractor"
jar {
    manifest {
        attributes(
            "Implementation-Title": "Extractor",
            "Implementation-Version": version,
            "Main-Class": mainClassName
        )
    }
}

// Application plugin.
applicationDefaultJvmArgs = [
    "-server",
    "-XX:+UnlockExperimentalVMOptions",
    "-XX:+AlwaysPreTouch",
    "-XX:+UseCompressedOops",
    "-XX:+OptimizeStringConcat",
    "-XX:+UseG1GC",
    "-XX:ParallelGCThreads=32",
    "-XX:ConcGCThreads=32",
    "-XX:MaxGCPauseMillis=2000",
    "-XX:+ScavengeBeforeFullGC",
    "-XX:MinRAMPercentage=10.0",
    "-XX:MaxRAMPercentage=50.0"
]

task extractor(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    args = ["csvextractor", "-h"]
}

test {
    useJUnitPlatform()

    testLogging {
        events = [ "FAILED", "PASSED", "SKIPPED" ]
        showExceptions = true
        exceptionFormat = "FULL"
        showExceptions = true
        showCauses = true
        showStackTraces = true
    }
}

wrapper {
    distributionType = "ALL"
}